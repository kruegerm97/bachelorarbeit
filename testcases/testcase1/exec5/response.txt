Gerne helfe ich Ihnen dabei, ein Python-Skript zu erstellen, das das Sheet `'Fallzahlen_2023'` aus Ihrer Excel-Datei `'Fallzahlen&HZ2014-2023.xlsx'` einliest, die Gesamtanzahl der Straftaten pro Bezirk bereinigt und die Bezirke nach dieser Zahl sortiert.

Hier ist ein Schritt-für-Schritt-Leitfaden inklusive des vollständigen Python-Skripts:

### Voraussetzungen

1. **Python installieren:** Stellen Sie sicher, dass Python auf Ihrem Computer installiert ist. Sie können es von [python.org](https://www.python.org/downloads/) herunterladen.

2. **Benötigte Bibliotheken installieren:** Wir verwenden die Bibliotheken `pandas` und `openpyxl`. Diese können Sie über `pip` installieren:

    ```bash
    pip install pandas openpyxl
    ```

### Python-Skript

```python
import pandas as pd

# Pfad zur Excel-Datei
excel_datei = 'Fallzahlen&HZ2014-2023.xlsx'

# Name des Sheets
sheet_name = 'Fallzahlen_2023'

# Einlesen des Excel-Sheets
df = pd.read_excel(excel_datei, sheet_name=sheet_name, skiprows=4)

# Anzeige der ersten Zeilen zur Überprüfung
#print(df.head())

# Benennung der Spalten basierend auf den gegebenen Daten
spalten = [
    'LOR-Schlüssel (Bezirksregion)', 'Bezeichnung (Bezirksregion)',
    'Straftaten insgesamt', 'Raub', 'Straßenraub, Handtaschenraub',
    'Körperverletzungen insgesamt', 'Gefährliche und schwere Körperverletzung',
    'Freiheitsberaubung, Nötigung, Bedrohung, Nachstellung',
    'Diebstahl insgesamt', 'Diebstahl von Kraftwagen', 'Diebstahl an/aus Kfz',
    'Fahrraddiebstahl', 'Wohnraumeinbruch', 'Branddelikte insgesamt',
    'Brandstiftung', 'Sachbeschädigung insgesamt', 'Sachbeschädigung durch Graffiti',
    'Rauschgiftdelikte', 'Kieztaten'
]

# Setzen der Spaltennamen
df.columns = spalten

# Entfernen von Zeilen, die keine gültigen Bezirke sind (z.B. leere Zeilen oder Zusammenfassungen)
# Hier nehmen wir an, dass gültige Bezirke eine numerische LOR-Schlüssel haben
df = df[df['LOR-Schlüssel (Bezirksregion)'].astype(str).str.match(r'^\d+')].copy()

# Bereinigung der 'Straftaten insgesamt' Spalte
# Entfernen von Punkt als Tausendertrennzeichen und Ersetzen von Komma durch nichts
# Falls Ihre Daten Dezimalstellen hätten, müssten Sie entsprechend anpassen
df['Straftaten insgesamt'] = df['Straftaten insgesamt'].astype(str).str.replace('.', '', regex=False).str.replace(',', '').astype(int)

# Sortieren des DataFrames nach 'Straftaten insgesamt' in absteigender Reihenfolge
df_sortiert = df.sort_values(by='Straftaten insgesamt', ascending=False)

# Zurücksetzen des Indexes nach dem Sortieren
df_sortiert.reset_index(drop=True, inplace=True)

# Anzeige des sortierten DataFrames
print(df_sortiert[['Bezeichnung (Bezirksregion)', 'Straftaten insgesamt']])

# Optional: Speichern des sortierten DataFrames in eine neue Excel-Datei
df_sortiert.to_excel('Fallzahlen_2023_sortiert.xlsx', sheet_name='Sortiert', index=False)
```

### Erklärung des Skripts

1. **Importieren der Bibliotheken:**
    - `pandas` ist eine leistungsstarke Bibliothek zur Datenmanipulation und -analyse.
  
2. **Einlesen der Excel-Datei:**
    - Das Skript liest das spezifische Sheet `'Fallzahlen_2023'` aus der Excel-Datei ein.
    - `skiprows=4` überspringt die ersten vier Zeilen, die in Ihrem Datenbeispiel Überschriften und leere Zeilen enthalten.

3. **Setzen der Spaltennamen:**
    - Basierend auf den von Ihnen bereitgestellten Daten werden die Spaltennamen explizit gesetzt.

4. **Datenbereinigung:**
    - Entfernen von Zeilen, die keine gültigen Bezirke darstellen. Dies geschieht durch Überprüfung, ob der `LOR-Schlüssel` mit einer Zahl beginnt.
    - Bereinigung der Spalte `'Straftaten insgesamt'`:
        - Entfernen von Punkten, die als Tausendertrennzeichen verwendet werden.
        - Entfernen von Kommas, um die Zahlen in ein Integer-Format zu konvertieren.

5. **Sortieren der Daten:**
    - Der DataFrame wird basierend auf der Spalte `'Straftaten insgesamt'` in absteigender Reihenfolge sortiert.

6. **Anzeige und Speichern:**
    - Das sortierte Ergebnis wird auf der Konsole angezeigt, wobei nur die Bezeichnung des Bezirks und die Gesamtzahl der Straftaten angezeigt werden.
    - Optional wird das sortierte DataFrame in eine neue Excel-Datei `'Fallzahlen_2023_sortiert.xlsx'` gespeichert.

### Ausführung des Skripts

1. Speichern Sie das obige Skript in einer Datei, z.B. `sortiere_straftaten.py`.
2. Stellen Sie sicher, dass sich die Excel-Datei `'Fallzahlen&HZ2014-2023.xlsx'` im gleichen Verzeichnis wie das Skript befindet oder passen Sie den Pfad entsprechend an.
3. Führen Sie das Skript über die Kommandozeile aus:

    ```bash
    python sortiere_straftaten.py
    ```

Nach der Ausführung sollten Sie eine sortierte Liste der Bezirke nach der Gesamtzahl der Straftaten in der Konsole sehen und eine neue Excel-Datei mit den sortierten Daten erhalten.

### Beispielausgabe

```
        Bezeichnung (Bezirksregion)  Straftaten insgesamt
0                       Mitte               83611
1          Friedrichshain-Kreuzberg           55838
2                       Tempelhof-Schöneberg    41776
3                  Neukölln                 45313
...
```

Diese Ausgabe zeigt die Bezirke, sortiert nach der Gesamtzahl der Straftaten in absteigender Reihenfolge.

Falls Sie weitere Anpassungen benötigen oder Fragen haben, stehe ich gerne zur Verfügung!
