Hier ist ein Python-Skript, das die gewünschten Anforderungen erfüllt. Das Skript verwendet die `pandas`-Bibliothek, um die Excel-Datei zu lesen und die Daten zu verarbeiten. Es identifiziert die Oberbezirke, sammelt die zugehörigen Unterbezirke und ermittelt für jeden Oberbezirk den Unterbezirk mit den meisten Raubdelikten.

Stellen Sie sicher, dass Sie die `pandas`-Bibliothek installiert haben. Falls nicht, können Sie sie mit folgendem Befehl installieren:

```bash
pip install pandas
```

Hier ist das vollständige Python-Skript:

```python
import pandas as pd

# Pfad zur Excel-Datei
excel_file = 'Fallzahlen&HZ 2014-2023.xlsx'

# Name des Sheets
sheet_name = 'Fallzahlen_2023'

# Liste der Oberbezirke
oberbezirke = [
    'Mitte',
    'Friedrichshain-Kreuzberg',
    'Pankow',
    'Charlottenburg-Wilmersdorf',
    'Spandau',
    'Steglitz-Zehlendorf',
    'Tempelhof-Schöneberg',
    'Neukölln',
    'Treptow-Köpenick',
    'Marzahn-Hellersdorf',
    'Lichtenberg',
    'Reinickendorf'
]

# Lesen des Excel-Sheets
df = pd.read_excel(excel_file, sheet_name=sheet_name)

# Entfernen der letzten zwei Zeilen (Gesamtwerte)
df = df.iloc[:-2].reset_index(drop=True)

# Initialisierung
current_oberbezirk = None
unterbezirke_dict = {ober: [] for ober in oberbezirke}

# Iteration über die Zeilen des DataFrames
for index, row in df.iterrows():
    bezirk_name = row['Bezeichnung (Bezirksregion)']
    
    if bezirk_name in oberbezirke:
        # Aktueller Oberbezirk festlegen
        current_oberbezirk = bezirk_name
    else:
        if current_oberbezirk:
            # Unterbezirk zuweisen
            unterbezirke_dict[current_oberbezirk].append({
                'Bezeichnung': bezirk_name,
                'Raub': row['Raub']
            })
        else:
            # Falls kein Oberbezirk festgelegt ist, überspringen
            continue

# Ermittlung des Unterbezirks mit den meisten Raubdelikten für jeden Oberbezirk
top_unterbezirke = {}

for oberbezirk, unterbezirke in unterbezirke_dict.items():
    if unterbezirke:
        # Finden des Unterbezirks mit dem maximalen 'Raub' Wert
        top_unterbezirk = max(unterbezirke, key=lambda x: x['Raub'])
        top_unterbezirke[oberbezirk] = {
            'Unterbezirk': top_unterbezirk['Bezeichnung'],
            'Raubdelikte': top_unterbezirk['Raub']
        }
    else:
        top_unterbezirke[oberbezirk] = {
            'Unterbezirk': None,
            'Raubdelikte': 0
        }

# Ausgabe der Ergebnisse
print("Unterbezirk mit den meisten Raubdelikten pro Oberbezirk (2023):\n")
for oberbezirk, daten in top_unterbezirke.items():
    unterbezirk = daten['Unterbezirk']
    raub = daten['Raubdelikte']
    if unterbezirk:
        print(f"{oberbezirk}: {unterbezirk} ({raub} Raubdelikte)")
    else:
        print(f"{oberbezirk}: Kein Unterbezirk gefunden.")

```

### Erklärung des Skripts

1. **Importieren der Bibliothek**:
    - `pandas` wird für die Datenverarbeitung verwendet.

2. **Festlegen der Dateipfade und Namen**:
    - `excel_file` definiert den Namen der Excel-Datei.
    - `sheet_name` gibt das zu lesende Sheet an.

3. **Definieren der Oberbezirke**:
    - Die Liste `oberbezirke` enthält die Namen der Oberbezirke.

4. **Lesen und Vorbereiten der Daten**:
    - Das Excel-Sheet wird gelesen und die letzten zwei Zeilen, die Gesamtwerte enthalten, werden entfernt.

5. **Zuweisen der Unterbezirke zu den Oberbezirken**:
    - Das Skript durchläuft jede Zeile und bestimmt, ob die aktuelle Zeile einen Oberbezirk oder einen Unterbezirk darstellt.
    - Unterbezirke werden dem aktuell festgelegten Oberbezirk zugewiesen.

6. **Ermitteln des Unterbezirks mit den meisten Raubdelikten**:
    - Für jeden Oberbezirk wird der Unterbezirk mit dem höchsten Wert in der Spalte 'Raub' identifiziert.

7. **Ausgabe der Ergebnisse**:
    - Die Ergebnisse werden in der Konsole ausgegeben, wobei für jeden Oberbezirk der entsprechende Unterbezirk und die Anzahl der Raubdelikte angezeigt werden.

### Ausführen des Skripts

1. Stellen Sie sicher, dass sich die Excel-Datei `'Fallzahlen&HZ 2014-2023.xlsx'` im gleichen Verzeichnis wie das Skript befindet. Andernfalls passen Sie den Pfad in der Variable `excel_file` entsprechend an.

2. Führen Sie das Skript mit Python aus:

    ```bash
    python dein_skript_name.py
    ```

    Ersetzen Sie `dein_skript_name.py` durch den tatsächlichen Namen Ihres Skripts.

Nach der Ausführung sollten die Unterbezirke mit den meisten Raubdelikten für jeden Oberbezirk in der Konsole angezeigt werden. Zum Beispiel:

```
Unterbezirk mit den meisten Raubdelikten pro Oberbezirk (2023):

Mitte: Regierungsviertel (44 Raubdelikte)
Friedrichshain-Kreuzberg: [Unterbezirk] ([Raubzahl] Raubdelikte)
...
```

Passen Sie das Skript bei Bedarf weiter an, um zusätzliche Funktionen oder eine andere Ausgabeform zu integrieren.