Hier ist ein Python-Skript, das die Anforderungen erfüllt. Es liest die Excel-Datei `Fallzahlen.xlsx`, analysiert alle relevanten Sheets, extrahiert die `Straftaten_insgesamt`-Werte für `Berlin (PKS gesamt)` und berechnet die prozentuale Veränderung zum Vorjahr. Das Ergebnis wird als Pandas DataFrame ausgegeben.

### Voraussetzungen

Stelle sicher, dass du die benötigten Bibliotheken installiert hast. Du kannst sie mit `pip` installieren, falls sie noch nicht vorhanden sind:

```bash
pip install pandas openpyxl
```

### Python-Skript

```python
import pandas as pd
import re

def extract_year(sheet_name):
    """
    Extrahiert das Jahr aus dem Sheet-Namen.
    Erwartet Format: 'Fallzahlen_YYYY'
    """
    match = re.search(r'Fallzahlen_(\d{4})', sheet_name)
    if match:
        return int(match.group(1))
    else:
        return None

def get_straftaten_insgesamt(excel_file, sheet_name, target_district):
    """
    Liest ein Sheet und extrahiert den Wert von 'Straftaten_insgesamt' für den angegebenen Bezirk.
    """
    df = pd.read_excel(excel_file, sheet_name=sheet_name)
    
    # Annahme: Die Bezeichnung des Bezirks ist in der Spalte 'Bezirke'
    row = df[df['Bezirke'] == target_district]
    
    if not row.empty:
        return row.iloc[0]['Straftaten_insgesamt']
    else:
        print(f"Warnung: Bezirk '{target_district}' nicht in Sheet '{sheet_name}' gefunden.")
        return None

def main():
    excel_file = 'Fallzahlen.xlsx'
    target_district = 'Berlin (PKS gesamt)'
    
    # Lade alle Sheet-Namen
    xls = pd.ExcelFile(excel_file)
    sheet_names = xls.sheet_names
    
    # Filtere die relevanten Sheets und extrahiere die Jahre
    pattern = re.compile(r'^Fallzahlen_(\d{4})$')
    sheets_with_year = []
    for sheet in sheet_names:
        match = pattern.match(sheet)
        if match:
            year = int(match.group(1))
            sheets_with_year.append((year, sheet))
    
    if not sheets_with_year:
        print("Keine Sheets im erwarteten Format 'Fallzahlen_YYYY' gefunden.")
        return
    
    # Sortiere die Sheets nach Jahr
    sheets_with_year.sort(key=lambda x: x[0])
    
    # Extrahiere die 'Straftaten_insgesamt' Werte
    data = {}
    for year, sheet in sheets_with_year:
        value = get_straftaten_insgesamt(excel_file, sheet, target_district)
        if value is not None:
            data[year] = value
    
    # Erstelle ein DataFrame
    df = pd.DataFrame(list(data.items()), columns=['Jahr', 'Straftaten_insgesamt'])
    df.sort_values('Jahr', inplace=True)
    df.reset_index(drop=True, inplace=True)
    
    # Berechne die prozentuale Veränderung zum Vorjahr
    df['Prozentuale_Veraenderung'] = df['Straftaten_insgesamt'].pct_change() * 100
    
    # Optional: Runde die Prozentwerte auf zwei Dezimalstellen
    df['Prozentuale_Veraenderung'] = df['Prozentuale_Veraenderung'].round(2)
    
    print(df)

if __name__ == "__main__":
    main()
```

### Erklärung des Skripts

1. **Importieren der Bibliotheken**:
    - `pandas` für die Datenverarbeitung.
    - `re` für reguläre Ausdrücke zur Verarbeitung der Sheet-Namen.

2. **Funktionen**:
    - `extract_year`: Extrahiert das Jahr aus dem Sheet-Namen, wenn es dem Muster `Fallzahlen_YYYY` entspricht.
    - `get_straftaten_insgesamt`: Liest ein bestimmtes Sheet und extrahiert den Wert der Spalte `Straftaten_insgesamt` für den angegebenen Bezirk (`Berlin (PKS gesamt)`).

3. **Hauptfunktion (`main`)**:
    - Lädt die Excel-Datei und alle Sheet-Namen.
    - Filtert die Sheets, die dem Muster `Fallzahlen_YYYY` entsprechen, und extrahiert die Jahre.
    - Sortiert die Sheets chronologisch nach Jahr.
    - Extrahiert die `Straftaten_insgesamt`-Werte für `Berlin (PKS gesamt)` aus jedem Sheet.
    - Erstellt ein Pandas DataFrame mit den Jahren und den entsprechenden Straftatenzahlen.
    - Berechnet die prozentuale Veränderung der Straftaten zum Vorjahr.
    - Gibt das resultierende DataFrame aus.

### Beispielhafte Ausgabe

Nach dem Ausführen des Skripts könnte die Ausgabe ungefähr wie folgt aussehen (die tatsächlichen Werte hängen von den Daten in deinen Sheets ab):

```
    Jahr  Straftaten_insgesamt  Prozentuale_Veraenderung
0  2014               500000                       NaN
1  2015               510000                     2.00
2  2016               495000                    -2.94
3  2017               520000                     4.04
4  2018               530000                     1.92
5  2019               515000                    -2.83
6  2020               525000                     1.95
7  2021               535000                     1.90
8  2022               550000                     2.81
9  2023               560000                     1.82
```

### Hinweise

- **Fehlende Daten**: Falls ein bestimmtes Jahr oder ein Sheet nicht den benötigten Bezirk enthält, gibt das Skript eine Warnung aus und überspringt diesen Eintrag.
- **Anpassungen**: Je nach tatsächlicher Struktur deiner Excel-Datei (z.B. andere Spaltennamen oder zusätzliche Filter) könnte es notwendig sein, das Skript entsprechend anzupassen.
- **Output-Format**: Das Skript druckt das resultierende DataFrame in der Konsole aus. Du kannst es jedoch leicht modifizieren, um die Daten in eine CSV-Datei zu speichern oder weiter zu verarbeiten.

### Speichern des DataFrames in eine CSV-Datei (optional)

Wenn du das Ergebnis in eine CSV-Datei speichern möchtest, kannst du folgendes hinzufügen, bevor du das DataFrame ausgibst:

```python
    # Speichere das DataFrame in eine CSV-Datei
    df.to_csv('Prozentuale_Veraenderung_Straftaten.csv', index=False)
    print("Das Ergebnis wurde in 'Prozentuale_Veraenderung_Straftaten.csv' gespeichert.")
```

Füge diese Zeilen direkt nach der Berechnung der prozentualen Veränderung (`df['Prozentuale_Veraenderung'] = ...`) ein.

Ich hoffe, dieses Skript hilft dir weiter! Falls du weitere Anpassungen benötigst oder Fragen hast, lass es mich wissen.