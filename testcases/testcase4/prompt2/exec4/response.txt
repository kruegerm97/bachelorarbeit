Hier ist ein vollständiges Python-Skript, das die gewünschten Analysen durchführt. Das Skript verwendet die `pandas`-Bibliothek, um die Excel-Datei zu lesen, die relevanten Daten aus jedem Sheet zu extrahieren, die prozentuale Veränderung der Straftaten zum Vorjahr zu berechnen und das Ergebnis als Pandas DataFrame darzustellen.

Stellen Sie sicher, dass Sie die `pandas`-Bibliothek installiert haben. Falls nicht, können Sie sie mit `pip install pandas openpyxl` installieren, da `openpyxl` für das Lesen von Excel-Dateien benötigt wird.

```python
import pandas as pd

def analyze_fallzahlen(file_path, target_district="Berlin (PKS gesamt)", 
                       column_name="Straftaten_insgesamt"):
    """
    Analysiert die Excel-Datei 'Fallzahlen.xlsx' und erstellt eine Zeitreihe mit 
    der prozentualen Veränderung der Straftaten zum jeweiligen Vorjahr.
    
    Parameters:
    - file_path: Pfad zur Excel-Datei
    - target_district: Name des Bezirks, der analysiert werden soll
    - column_name: Name der Spalte, deren Veränderung berechnet werden soll
    
    Returns:
    - pandas DataFrame mit den Jahreszahlen und der prozentualen Veränderung
    """
    
    # Lade die Excel-Datei
    try:
        xls = pd.ExcelFile(file_path)
    except FileNotFoundError:
        print(f"Die Datei {file_path} wurde nicht gefunden.")
        return
    except Exception as e:
        print(f"Ein Fehler ist aufgetreten beim Laden der Datei: {e}")
        return
    
    # Initialisiere ein Dictionary zur Speicherung der Ergebnisse
    data = {}
    
    # Iteriere über alle Sheets in der Excel-Datei
    for sheet in xls.sheet_names:
        # Extrahiere das Jahr aus dem Sheet-Namen
        try:
            year = int(sheet.split('_')[-1])
        except ValueError:
            print(f"Das Sheet '{sheet}' folgt nicht dem erwarteten Namensformat. Überspringe dieses Sheet.")
            continue
        
        # Lese das aktuelle Sheet in einen DataFrame
        try:
            df = pd.read_excel(xls, sheet_name=sheet)
        except Exception as e:
            print(f"Ein Fehler ist aufgetreten beim Lesen des Sheets '{sheet}': {e}")
            continue
        
        # Finde die Zeile für den Zielbezirk
        row = df[df['Bezirke'] == target_district]
        
        if row.empty:
            print(f"Der Bezirk '{target_district}' wurde im Sheet '{sheet}' nicht gefunden. Überspringe dieses Sheet.")
            continue
        
        # Extrahiere den Wert der gewünschten Spalte
        try:
            value = row[column_name].values[0]
            # Stelle sicher, dass der Wert numerisch ist
            value = float(value)
        except (IndexError, ValueError) as e:
            print(f"Fehler beim Extrahieren des Wertes in Sheet '{sheet}': {e}")
            continue
        
        # Speichere das Jahr und den Wert im Dictionary
        data[year] = value
    
    # Erstelle einen DataFrame aus dem Dictionary
    df_data = pd.DataFrame(list(data.items()), columns=['Year', column_name])
    
    # Sortiere den DataFrame nach dem Jahr aufsteigend
    df_data.sort_values('Year', inplace=True)
    df_data.reset_index(drop=True, inplace=True)
    
    # Berechne die prozentuale Veränderung zum Vorjahr
    df_data['Percent Change'] = df_data[column_name].pct_change() * 100
    
    # Optional: Runde die Prozentänderungen auf zwei Dezimalstellen
    df_data['Percent Change'] = df_data['Percent Change'].round(2)
    
    # Setze das Jahr als Index (optional)
    # df_data.set_index('Year', inplace=True)
    
    return df_data

if __name__ == "__main__":
    # Pfad zur Excel-Datei
    excel_file = 'Fallzahlen.xlsx'
    
    # Führe die Analyse durch
    result_df = analyze_fallzahlen(excel_file)
    
    if result_df is not None:
        # Zeige das Ergebnis an
        print(result_df)
        
        # Optional: Speichere das Ergebnis in einer neuen Excel- oder CSV-Datei
        # result_df.to_excel('Straftaten_Prozentuale_Veraenderung.xlsx', index=False)
        # oder
        # result_df.to_csv('Straftaten_Prozentuale_Veraenderung.csv', index=False)
```

### Erklärung des Skripts:

1. **Importieren der Bibliothek:**
   - `pandas` wird für die Datenmanipulation und -analyse verwendet.

2. **Funktion `analyze_fallzahlen`:**
   - **Parameter:**
     - `file_path`: Der Pfad zur Excel-Datei.
     - `target_district`: Der Bezirk, der analysiert werden soll (Standard: "Berlin (PKS gesamt)").
     - `column_name`: Die Spalte, deren Veränderung berechnet werden soll (Standard: "Straftaten_insgesamt").
   - **Schritte:**
     - Lädt die Excel-Datei und iteriert über alle Sheets.
     - Extrahiert das Jahr aus dem Sheet-Namen.
     - Liest das Sheet in einen DataFrame und sucht die Zeile für den Zielbezirk.
     - Extrahiert den Wert der gewünschten Spalte und speichert ihn im Dictionary `data`.
     - Nach der Iteration erstellt der DataFrame `df_data` aus dem Dictionary, sortiert nach Jahr.
     - Berechnet die prozentuale Veränderung zum Vorjahr und fügt sie als neue Spalte hinzu.

3. **Hauptblock (`if __name__ == "__main__":`):**
   - Definiert den Pfad zur Excel-Datei.
   - Ruft die Funktion `analyze_fallzahlen` auf und speichert das Ergebnis in `result_df`.
   - Gibt das Ergebnis aus.
   - Optional kann das Ergebnis in eine neue Excel- oder CSV-Datei gespeichert werden (auskommentiert).

### Beispielausgabe:

Angenommen, die Excel-Datei enthält Daten von 2014 bis 2023, könnte die Ausgabe wie folgt aussehen:

```
    Year  Straftaten_insgesamt  Percent Change
0   2014               500000              NaN
1   2015               510000            2.00
2   2016               495000           -2.94
3   2017               530000            7.07
4   2018               550000            3.77
5   2019               540000           -1.82
6   2020               560000            3.70
7   2021               580000            3.57
8   2022               570000           -1.72
9   2023               590000            3.51
```

**Hinweis:**
- Der erste Jahrseintrag hat keine prozentuale Veränderung zum Vorjahr und zeigt daher `NaN`.
- Stellen Sie sicher, dass alle Sheet-Namen dem Format `Fallzahlen_Jahr` entsprechen, z.B. `Fallzahlen_2014`, `Fallzahlen_2015` usw.
- Falls die Struktur der Excel-Datei abweicht oder zusätzliche Fehlerbehandlungen benötigt werden, kann das Skript entsprechend angepasst werden.