Natürlich! Unten finden Sie ein vollständiges Python-Skript, das die von Ihnen beschriebenen Anforderungen erfüllt. Das Skript verwendet die Bibliothek `pandas`, um die relevanten Sheets aus der Excel-Datei zu lesen, die Straftaten pro Bezirk über alle Jahre hinweg zu summieren und schließlich den Bezirk mit den meisten Straftaten zu ermitteln.

### Voraussetzungen
Stellen Sie sicher, dass Sie `pandas` und `openpyxl` installiert haben. Sie können diese Bibliotheken mit folgendem Befehl installieren:

```bash
pip install pandas openpyxl
```

### Python-Skript

```python
import pandas as pd
import re

def find_district_with_most_crimes(excel_file):
    """
    Liest relevante Sheets aus einer Excel-Datei, summiert die Straftaten pro Bezirk über alle Jahre und gibt den Bezirk mit den meisten Straftaten zurück.
    
    :param excel_file: Pfad zur Excel-Datei
    :return: Tuple mit Bezirk und Gesamtzahl der Straftaten
    """
    # Definieren Sie die Jahre, die Sie analysieren möchten
    years = list(range(2014, 2024))  # 2014 bis 2023

    # Initialisieren Sie ein Dictionary zur Speicherung der Gesamtstraftaten pro Bezirk
    total_crimes = {}

    # Laden Sie die Excel-Datei
    try:
        xl = pd.ExcelFile(excel_file)
    except Exception as e:
        print(f"Fehler beim Laden der Excel-Datei: {e}")
        return

    # Iterieren Sie über alle Sheet-Namen
    for sheet in xl.sheet_names:
        # Prüfen Sie, ob der Sheet-Name dem Muster "PKS Jahr" entspricht
        match = re.search(r'PKS (\d{4})', sheet)
        if match:
            year = int(match.group(1))
            if year not in years:
                continue  # Überspringen Sie Jahre außerhalb des gewünschten Bereichs
            
            try:
                # Lesen Sie den relevanten Sheet, überspringen Sie die ersten 4 Zeilen, die Metadaten enthalten
                df = xl.parse(sheet, skiprows=4)
            except Exception as e:
                print(f"Fehler beim Lesen des Sheets {sheet}: {e}")
                continue

            # Bereinigen Sie die Spaltennamen
            df.columns = [col.strip().replace('\n', ' ') for col in df.columns]

            # Identifizieren Sie die relevanten Spalten
            bezirk_col = None
            crimes_col = None
            for col in df.columns:
                if 'Bezeichnung' in col:
                    bezirk_col = col
                elif 'Straftaten' in col and 'insgesamt' in col.lower():
                    crimes_col = col

            if not bezirk_col or not crimes_col:
                print(f"Relevante Spalten in Sheet {sheet} nicht gefunden.")
                continue

            # Extrahieren Sie die relevanten Daten
            df_relevant = df[[bezirk_col, crimes_col]].dropna()

            # Bereinigen Sie die Straftaten-Zahlen (Entfernen von Kommas und Umwandeln in Integer)
            df_relevant[crimes_col] = df_relevant[crimes_col].astype(str).str.replace('"', '').str.replace(',', '').astype(float).astype(int)

            # Summieren Sie die Straftaten pro Bezirk
            for _, row in df_relevant.iterrows():
                district = row[bezirk_col].strip()
                crimes = row[crimes_col]
                if district in total_crimes:
                    total_crimes[district] += crimes
                else:
                    total_crimes[district] = crimes

    # Ermitteln Sie den Bezirk mit den meisten Straftaten
    if total_crimes:
        max_district = max(total_crimes, key=total_crimes.get)
        max_crimes = total_crimes[max_district]
        return max_district, max_crimes
    else:
        print("Keine Daten gefunden.")
        return None, None

if __name__ == "__main__":
    # Pfad zur Excel-Datei
    excel_path = 'Fallzahlen&HZ2014-2023.xlsx'
    
    district, crimes = find_district_with_most_crimes(excel_path)
    
    if district and crimes:
        print(f"Der Bezirk mit den meisten Straftaten von allen Jahren kombiniert ist {district} mit {crimes} Straftaten.")
    else:
        print("Es konnte kein Bezirk mit den meisten Straftaten ermittelt werden.")
```

### Erklärung des Skripts

1. **Importieren der Bibliotheken:**  
   Das Skript verwendet `pandas` zum Verarbeiten der Excel-Datei und `re` für reguläre Ausdrücke zur Identifizierung der relevanten Sheets.

2. **Funktion `find_district_with_most_crimes`:**  
   - **Parameter:** Pfad zur Excel-Datei.
   - **Prozess:**
     - Definiert die Jahre von 2014 bis 2023.
     - Lädt die Excel-Datei und iteriert über alle Sheets.
     - Mit einem regulären Ausdruck werden nur die Sheets ausgewählt, die dem Muster "PKS Jahr" entsprechen.
     - Jede relevante Sheet wird gelesen, wobei die ersten 4 Zeilen übersprungen werden, die Metadaten enthalten.
     - Identifiziert die Spalten für den Bezirk und die Gesamtanzahl der Straftaten.
     - Bereinigt die Daten, entfernt Anführungszeichen und Kommas und konvertiert die Zahlen in Integer.
     - Summiert die Straftaten pro Bezirk über alle Jahre hinweg.
   - **Rückgabe:** Den Bezirk mit den meisten Straftaten und die Gesamtzahl der Straftaten.

3. **Hauptteil des Skripts:**  
   - Definiert den Pfad zur Excel-Datei.
   - Ruft die Funktion auf und gibt das Ergebnis aus.

### Nutzung

1. **Speichern Sie das Skript:**  
   Speichern Sie das obige Skript in einer Datei, z.B. `crime_analysis.py`.

2. **Platzieren Sie die Excel-Datei:**  
   Stellen Sie sicher, dass die Excel-Datei `Fallzahlen&HZ2014-2023.xlsx` im gleichen Verzeichnis wie das Skript liegt oder passen Sie den Pfad entsprechend an.

3. **Führen Sie das Skript aus:**  
   Öffnen Sie ein Terminal oder eine Eingabeaufforderung und navigieren Sie zum Verzeichnis des Skripts. Führen Sie dann aus:

   ```bash
   python crime_analysis.py
   ```

   Sie sollten eine Ausgabe erhalten, die etwa so aussieht:

   ```
   Der Bezirk mit den meisten Straftaten von allen Jahren kombiniert ist [Bezirk] mit [Anzahl] Straftaten.
   ```

### Anmerkungen

- **Fehlende oder variierende Daten:**  
  Falls einige Sheets nicht den erwarteten Aufbau haben oder Daten fehlen, gibt das Skript entsprechende Fehlermeldungen aus und fährt mit den nächsten Sheets fort.

- **Anpassungen:**  
  Möglicherweise müssen Sie die Anzahl der zu überspringenden Zeilen (`skiprows=4`) anpassen, je nachdem, wie Ihre Excel-Sheets strukturiert sind.

- **Spaltennamen:**  
  Stellen Sie sicher, dass die Spaltennamen in den Sheets konsistent sind. Falls sie variieren, passen Sie die Bedingungen zur Identifizierung der relevanten Spalten entsprechend an.

Dieses Skript bietet eine solide Grundlage für die Analyse der Kriminalitätsdaten über mehrere Jahre hinweg und lässt sich bei Bedarf leicht erweitern oder anpassen.
