Hier ist ein Python-Skript, das die von Ihnen beschriebenen Schritte ausführt. Stellen Sie sicher, dass Sie die benötigten Bibliotheken (`pandas` und `openpyxl`) installiert haben. Sie können diese mit `pip install pandas openpyxl` installieren, falls sie noch nicht vorhanden sind.

```python
import pandas as pd

# 1. Alle Sheets einlesen und in separaten DataFrames speichern
excel_datei = 'Fallzahlen&HZ 2014-2023.xlsx'
sheet_namen = [f'Fallzahlen_{jahr}' for jahr in range(2014, 2024)]  # 2014 bis 2023

# Dictionary zur Speicherung der DataFrames
dataframes = {}

for sheet in sheet_namen:
    try:
        df = pd.read_excel(excel_datei, sheet_name=sheet)
        dataframes[sheet] = df
    except Exception as e:
        print(f"Fehler beim Lesen des Sheets {sheet}: {e}")

# 2. Alle DataFrames zu einem einzigen zusammenführen
gesamtdf = pd.concat(dataframes.values(), ignore_index=True)

# 3. Oberbezirke definieren
oberbezirke = [
    'Mitte', 'Friedrichshain-Kreuzberg', 'Pankow', 'Charlottenburg-Wilmersdorf',
    'Spandau', 'Steglitz-Zehlendorf', 'Tempelhof-Schöneberg', 'Neukölln',
    'Treptow-Köpenick', 'Marzahn-Hellersdorf', 'Lichtenberg', 'Reinickendorf'
]

# 4. Zeilen entfernen, die Oberbezirke, 'Berlin (PKS gesamt)', 'Stadt Berlin, nicht zuzuordnen' oder ähnliche enthalten
begrenzende_werte = oberbezirke + ['Berlin (PKS gesamt)', 'Stadtgebiet Berlin, nicht zuzuordnen', 'Bezirk (Rd), nicht zuzuordnen']

# Annahme: Spaltenname genau 'Bezeichnung (Bezirksregion)'
unterbezirk_df = gesamtdf[~gesamtdf['Bezeichnung (Bezirksregion)'].isin(begrenzende_werte)].copy()

# 5. Straftaten insgesamt über alle Jahre summieren
# Beachten Sie den genauen Spaltennamen, eventuell mit Zeilenumbruch und Bindestrich
# Um den Spaltennamen sicher zu erfassen, können wir nach einer Teilübereinstimmung suchen
# Alternativ den exakten Spaltennamen verwenden, wie im Beispiel 'Straftaten \n-insgesamt-'

# Finden des exakten Spaltennamens
spaltennamen = unterbezirk_df.columns
straftaten_spalte = [spalte for spalte in spaltennamen if 'Straftaten' in spalte and 'insgesamt' in spalte]
if not straftaten_spalte:
    raise ValueError("Die Spalte für 'Straftaten insgesamt' wurde nicht gefunden.")
straftaten_spalte = straftaten_spalte[0]

# Gruppieren nach Unterbezirk und Summieren der Straftaten
aggregiert = unterbezirk_df.groupby('Bezeichnung (Bezirksregion)')[straftaten_spalte].sum().reset_index()

# 6. Sortieren der Unterbezirke absteigend nach Straftaten
aggregiert_sortiert = aggregiert.sort_values(by=straftaten_spalte, ascending=False)

# 7. Top 10 Unterbezirke auswählen
top_10 = aggregiert_sortiert.head(10)

# 8. Neuer DataFrame mit den gewünschten Spalten
final_df = top_10[['Bezeichnung (Bezirksregion)', straftaten_spalte]].copy()

# Optional: Spalten umbenennen für Klarheit
final_df.rename(columns={
    'Bezeichnung (Bezirksregion)': 'Unterbezirk',
    straftaten_spalte: 'Gesamte Straftaten'
}, inplace=True)

# 9. Finalen DataFrame ausgeben
print(final_df)
```

### Erklärung der Schritte:

1. **Sheets einlesen:** Das Skript erstellt eine Liste der erwarteten Sheet-Namen von `Fallzahlen_2014` bis `Fallzahlen_2023` und liest jedes dieser Sheets in einen separaten Pandas DataFrame ein. Diese werden in einem Dictionary `dataframes` gespeichert.

2. **Zusammenführen der DataFrames:** Alle einzelnen DataFrames werden mithilfe von `pd.concat` zu einem einzigen DataFrame `gesamtdf` zusammengeführt.

3. **Identifikation der Oberbezirke:** Eine Liste `oberbezirke` enthält alle Oberbezirke, die identifiziert werden sollen.

4. **Filtern der Daten:** Das Skript entfernt alle Zeilen, die in der Spalte `'Bezeichnung (Bezirksregion)'` entweder einem Oberbezirk, `'Berlin (PKS gesamt)'`, `'Stadtgebiet Berlin, nicht zuzuordnen'` oder `'Bezirk (Rd), nicht zuzuordnen'` entsprechen. Das Ergebnis ist ein DataFrame `unterbezirk_df`, der nur Unterbezirke enthält.

5. **Summierung der Straftaten:** Das Skript identifiziert die Spalte für die gesamten Straftaten (unter Berücksichtigung möglicher Zeilenumbrüche im Spaltennamen) und summiert die Straftaten für jeden Unterbezirk über alle Jahre hinweg.

6. **Sortierung:** Die Unterbezirke werden nach der aggregierten Anzahl der Straftaten absteigend sortiert.

7. **Auswahl der Top 10:** Die zehn Unterbezirke mit den höchsten Gesamtstraftaten werden ausgewählt.

8. **Erstellung des finalen DataFrames:** Ein neuer DataFrame `final_df` wird erstellt, der nur die Spalten `'Unterbezirk'` und `'Gesamte Straftaten'` enthält.

9. **Ausgabe:** Der finale DataFrame wird ausgegeben.

### Hinweis:

- **Spaltennamen:** Achten Sie darauf, dass die Spaltennamen exakt mit denen in Ihrer Excel-Datei übereinstimmen. Insbesondere bei Sonderzeichen wie Zeilenumbrüchen (`\n`) kann es zu Abweichungen kommen. Das Skript sucht nach einer Spalte, die sowohl "Straftaten" als auch "insgesamt" im Namen enthält. Passen Sie dies ggf. an Ihre tatsächlichen Spaltennamen an.

- **Fehlerbehandlung:** Das Skript enthält grundlegende Fehlerbehandlungen, z.B. beim Lesen der Sheets und beim Auffinden der relevanten Spalte. Stellen Sie sicher, dass Ihre Excel-Datei korrekt formatiert ist und alle erwarteten Sheets und Spalten enthält.

- **Ausführung:** Stellen Sie sicher, dass sich die Excel-Datei `'Fallzahlen&HZ 2014-2023.xlsx'` im gleichen Verzeichnis wie das Skript befindet oder geben Sie den vollständigen Pfad zur Datei an.

Ich hoffe, dieses Skript hilft Ihnen weiter! Bei weiteren Fragen stehe ich gerne zur Verfügung.